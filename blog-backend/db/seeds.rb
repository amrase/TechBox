# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)
Blog.destroy_all
Category.destroy_all
News.destroy_all
# Tag.destroy_all
User.destroy_all

user1 = User.create(username:'amra',password:'1234',image:"https://bootdey.com/img/Content/avatar/avatar1.png",email:"amra@hotmail.com",dob:"03/03/1992",location:"New York",firstname:"Amra",lastname:"Sezairi")
user2 = User.create(username:'ado',password:'1234',image:"https://bootdey.com/img/Content/avatar/avatar6.png",email:"admir@hotmail.com",dob:"12/03/1994",location:"New York",firstname:"Admir",lastname:"Sezairi")
user3 = User.create(username:'dorina',password:'1234',image:"https://bootdey.com/img/Content/avatar/avatar7.png",email:"dorina@hotmail.com",dob:"03/03/1994",location:"Brooklyn",firstname:"Dorina",lastname:"Dresha")
user4 = User.create(username:'nena',password:'1234',image:"https://bootdey.com/img/Content/avatar/avatar3.png",email:"nena@hotmail.com",dob:"03/03/1967",location:"Bronx",firstname:"Nena",lastname:"Sezairi")
user5 = User.create(username:'nule',password:'1234',image:"https://bootdey.com/img/Content/avatar/avatar5.png",email:"nulle@hotmail.com",dob:"03/03/1980",location:"New York",firstname:"Nusret",lastname:"Sezairi")

blog1 = Blog.create(user_id: user1.id,title:'React Native Navigation (V2) by Wix',description:'React Native Navigation is a native navigation implementation, not a JavaScript based implementation. This means that the library will typically be more performant & have smoother interactions & screen transitions than some other solutions that are not native implementations.Version 2 or React Native Navigation is a rewrite of the library, addressing some issues that arose from the initial release.In this tutorial, we’ll show how to build a real-world authentication flow, simulating authentication state using AsyncStorage that can be replaced with whatever authentication provider you choose.The value we get out of using an authentication flow as a demo is that we’ll get to look at a fairly large surface of the React Native Navigation API, working with both stack & tab based navigation, & will also be seeing how to solve an actual problem when building out an application: structuring the navigation for user authentication considerations',image:'https://miro.medium.com/max/6600/1*9wv9OxqkEKUw4g9RoygTtA.jpeg')
blog2 = Blog.create(user_id: user1.id,title:'State Management with React Hooks — No Redux or Context API',description:'The idea is to create an array of listeners and only one state object. Every time that one component changes the state, all subscribed components get their setState() functions fired and get updated.We can do that by calling useState() inside our custom Hook. But, instead returning the setState() function, we add it to an array of listeners and return a function which updates the state object and run all listeners functions.',image:'https://miro.medium.com/max/1604/1*K5QpNirqwE9DUCnFMSe-zQ.png')
blog3 = Blog.create(user_id:user2.id,title:'Is TypeScript the way forward?',description:'You would have probably heard the word ‘typescript’ before. In 2019, TypeScript was the 7th most-used and the 5th fastest-growing language on GitHub.TypeScript (TS) is an open-source programming language developed by Microsoft that compiles into JavaScript (JS). Since its release in 2012, the language has remained in active development and continues to gain in popularity every year.The development community strongly associated TypeScript with Angular in the early days. That was because Angular forces you to use TypeScript, though overriding this is possible.',image:'https://miro.medium.com/max/1248/1*ku0PKqAPiy5ADNDhwXN4CQ.png')
blog4 = Blog.create(user_id:user2.id,title:'You Must Understand These 14 JavaScript Functions',description:'For suppose a user wants to get “Tutorix study kit”. He types every character of the product in the search bar. After typing each character, there is an Api call takes place from browser to server so as to get the required product. Since he wants “Tutorix study kit”, the user has to make 17 Api calls from the browser to a server. Think of a scenario that when millions of people making the same search thereby calling billions of Api’s. So calling billions of Api’s at a time will definitely lead to slower browser performance. To reduce this drawback, Debouncing comes in to picture.In this scenario, Debouncing will set a time interval, for suppose 2 secs, between two keystrokes. If the time between two keystrokes exceeds 2 secs, then only Api calling will take place. In those 2 secs, the user may type at least some characters, reducing those characters Api calls. Since the Api calls have reduced, the browser performance will be increased. One must heed that the Debouncing function updates for every keystroke.',image:'https://miro.medium.com/max/3008/1*JAxIsprA8OuS4xxITRnBHw.png')
blog5 = Blog.create(user_id:user2.id,title:'Please stop using Classes in JavaScript and become a better developer',description:'For years, OOP (object-oriented programming) was the de-facto standard in software engineering. The concepts of classes, polymorphism, inheritance, and encapsulation dominated and revolutionized the development process. But everything has an expiration date, programming paradigms included. In this article I will talk about why were classes introduced in the first place, why it is a bad idea to use classes in JavaScript, and what are some of the alternatives.I am not going to talk about why OOP is fading away in general, but you can check out this great article for more info.Even though the class keyword was added to JavaScript since ES6 (ECMAScript 2015), people were using classes earlier. The way to achieve this was constructor functions and prototype delegation. To show you exactly what I mean, I am going to implement the same class in ES5 and ES6 environments. Consider a class Car and SportsCar that inherits Car. Both of them have make and model properties and start method, but SportsCar also has the turbocharged property and overrides the start method.',image:'https://miro.medium.com/max/3840/0*FfWF8PjBXoj6eWMN.jpg')
blog6 = Blog.create(user_id:user1.id,title:'Use Angular Route-Guards to Secure Angular Pages — By allow, deny or redirect to other page-view',description:'A route guard is an important feature of the Angular Router that allows or denies the user access to the route pages based on some logic, based on weather user is logged in or not.ROUTE-GUARDS are very much important in application having login/logout scenarios.It’s commonly used to check if a user is logged in and has the authorization to access a page.We can easily manage which page is allowed for logged in user and which for non-logged in users.IMPLEMENTATION OF ROUTE GU',image:'https://miro.medium.com/max/3840/1*S19TTgFzdUsOTm054y_PZQ.png')
blog7 = Blog.create(user_id:user1.id,title:'Clean up your code by removing ‘if-else’ statements',description:'When we write JS code, we often encounter the situation of complex logic judgment. Generally, you can use if/else or switch to implement multiple conditional judgment, but there will be a problem: With the increase of logic complexity, if/else and switch in the code will become more and more bloated. This article will take you to try to write more elegant judgment logic.The code above does look cleaner, and the clever thing about this approach is that it uses the judgment condition as the object’s property name, and the processing logic as the object’s property value. When the button is clicked, this method is especially suitable for the case of unary condition judgment, which makes logical judgment by means of object attribute lookup.',image:'https://miro.medium.com/max/11448/0*jVfPx3gGE675dADr')
blog8 = Blog.create(user_id:user3.id,title:'Getting started with Redis. And how to use it in Node.js',description:'I don’t want to do long talk here.Let’s start with explaining & installing Redis on your machine, covering the basics of the Redis CLI & then use it in Node.js. For now we will only work with simple datatypes in Redis. Because that is what we need mostly.Good news here: Whether you use Redis with Node or any other programming langauge — it will be pretty similar everywhere once I have introduced you to the most important commands in Redis.What is Redis, and why is it so cool? Redis is an in-memory database, that works with key values. So for each value, there is one key. Therefore Redis is not an SQL database, and is designed for primitive data structures, which we will work with in this article. Because of the speed of reading and writing data with Redis, and the simple key-value system, Redis can be used wonderfully for e.g. caches.Permanent data such as user information or images, however, should not be stored with Redis because of its volatility. Are you already hungry for more? Let’s go!',image:'https://miro.medium.com/max/6668/1*4ZEonl9174VQzf2842OXpg.png')
blog9 = Blog.create(user_id:user3.id,title:'Fetching Data in React Native',description:'We are gonna use pokemon’s api to fetch data and have a method that renders each item. Then it would render a FlatList component from react-native which will improve performance, and lessen the memory footprint of our list in our application. Then we will use react-navigation so when you click on each item it will take you a separate screen for each pokemon. We will use fetch api to fetch pokemon’s data.Then do react-native run-ios or run-android whatever one you should prefer and wait for it bundle to prevent having issues.Now open the project in it your favorite text editor, and let’ s start coding!.Let first create a components folder. Create PokeList, PokeCard, Pokemon Folder within with each having a index.js for it’s functionality and styles.js for it’s styling.',image:'https://miro.medium.com/max/6048/0*EIOjwHiigJ0WOTaf')

cat1 = Category.create(name:'Information Technology')
cat2 = Category.create(name:'Networks')
cat3 = Category.create(name:'Cloud Robotics')
cat4 = Category.create(name:'Algorithms')
cat5 = Category.create(name:'Space')
cat6 = Category.create(name:'Architectural technology')
cat7 = Category.create(name:'Communication technology')
cat8 = Category.create(name:'Management technology')
cat9 = Category.create(name:'Artificial intelligence')
cat10 = Category.create(name:'Blockchain technology')
cat11 = Category.create(name:'Emerging technology')
cat12 = Category.create(name:'Educational technology‎')
cat13 = Category.create(name:'Machinery')



new1 = News.create(title:'Verizon gets a subscriber boost from Disney Plus',image:'https://qtxasset.com/styles/breakpoint_sm_default_480px_w/s3/fiercewireless/1572020128/signverizon800.jpg/signverizon800.jpg?rRLghtiKVBx0_.QdOxZqRSCPkuYtrqIu&itok=yms-jLzn',text:'Verizon added valuable new wireless customers in the fourth quarter of 2019 as it builds out its 5G network, but weaknesses in other parts of its business caused it to fall short of analyst expectations on earnings.The New York-based wireless carrier said Thursday that it added a total of 790,000 new postpaid phone subscribers in the fourth quarter, compared to 653,000 subscribers during the same period a year ago. Strong subscriber growth resulted in large part from a promotion that gives customers of its high-end wireless and Fios broadband and TV plans a year of the Disney Plus streaming service for free. Its not clear how much the offer cost Verizon.')
new2 = News.create(title:'AT&T secret prepaid plan is actually... good?',image:'https://about.att.com/ecms/dam/snr/DefaultThumbnails/logo_att_share.png',text:'For the last couple of years, Mint Mobile has courted new customers by offering low rates -- but with the stipulation that you have to buy service in bulk, prepaying for anywhere from three to 12 months. For example, a $240 payment will buy you 12 months of the carriers 8GB plan.Now, if youre willing to pay just a bit more, you can get a similar deal from AT&T: The online-only AT&T Prepaid 8GB Promo Plan costs $300 and buys you 12 months of service. (Taxes and fees are extra.) Thats literally half the price of the same plan charged monthly.Just a heads-up: The links above may take you to an AT&T page that offers several different packages. Make sure you scroll down and click on the one that offers the AT&T Prepaid 8GB Promo plan.')
new3 = News.create(title:'Scientists create cyborg jellyfish with swimming superpowers',image:'https://cnet2.cbsistatic.com/img/52gvVASWs9W_OPLV4m93YPAjOQQ=/2020/01/29/88e69539-b09d-43e4-8c2d-9dbcc11068b1/jellyfish.jpg',text:'Darth Vader and RoboCop now have some cyborg company in the form of superpowered jellyfish. Researchers at the California Institute of Technology have developed a swim controller that turns regular jellyfish into speed demons.The device enhances a jellyfishs natural pulsing motion that it uses to move around in the water. "The new prosthetic uses electrical impulses to regulate -- and speed up -- that pulsing, similar to the way a cardiac pacemaker regulates heart rate," Caltech said in a release on Wednesday.')
new4 = News.create(title:'New electric GMC Hummer has 1,000 horsepower and 3-second 0-60 time',image:'https://cnet3.cbsistatic.com/img/Px4tpNY7mUfg59__od_17Lhqb5s=/1092x0/2020/01/29/ba174b3d-27d7-4982-83e7-48b53419492a/gmc-hummer-ev-promo.jpg',text:'General Motors recently confirmed its working on an all-electric pickup for 2021. Earlier reports suggested this EV truck would also relaunch GMs defunct Hummer brand, and as it turns out, those rumors were correct. Sort of.GM officially announced the new Hummer EV on Thursday, but instead of being sold under a reborn brand, itll be part of GMCs lineup. The GMC Hummer EV (yes, thats the real name) will be revealed on May 20, following an initial tease in a 30-second Super Bowl ad spot.Ahead of its big debut, the Hummer EV is already throwing down some impressive numbers. According to a statement, GMC says the electric pickup truck will produce 1,000 horsepower and 11,500 pound-feet of torque and be able to accelerate from 0 to 60 mph in 3 seconds.')
new5 = News.create(title:'Amazon surprises Wall Street with a blowout holiday quarter',image:'https://cdn.geekwire.com/wp-content/uploads/2014/06/bezos1-e1444634859824-620x356.jpg',text:'Its OK if you get motion sickness from following Amazons latest earnings reports.Case in point: The e-commerce heavyweights profits crashed in the second and third quarters of 2019, following a heady string of record earnings. And, just when profits seemed to be on their way down, they are right back up again in the fourth quarter, just shy of the companys all-time quarterly record.Amazons stock jumped on better-than-expected earnings and sales, which were reported Thursday afternoon, surging nearly 10% after hours.To add to the good news, the company revealed it now has over 150 million paid Prime members globally, up from over 100 million, which it reported in April 2018.Amazons latest quarterly results come as Wall Street continues to be heavily focused on the companys revenue growth as a primary metric to judge its success. While that metric has been a source of strength for Amazon for years, its become harder for the company to maintain hefty percentage gains since its now so big, even as Amazon has pushed into new fields like healthcare, robotics, grocery and film production.')
new6 = News.create(title:'Bird designs new scooter to fend off vandals',image:'https://cnet3.cbsistatic.com/img/EtmCJT9e8XNFQVdmPp44xacDwPc=/940x0/2020/01/30/a8b30bcd-d7a7-4bb3-b4c6-73767349b6be/bird-two.png',text:'Electric scooters have been found hanging in trees, thrown in lakes, hotwired and stripped. When Scoot first launched its scooters in San Francisco in 2018, one of the biggest issues it said it faced was theft and vandalism. No wonder it would get to work building a tougher model to resist such abuse.Scoot, now owned by Bird, introduced a new scooter Thursday, dubbed Bird Two. It will first be available in San Francisco, then roll out to other cities.The vehicle comes with "autonomous damage sensors" that are designed to detect potentially dangerous maintenance issues. It has puncture-resistant tires, an anti-tipping kickstand and "enterprise level anti-theft encryption." And its design minimizes exposed cables and screws.')
new7 = News.create(title:'Yes, these top 5G benefits are actually coming to you. Now we know when',image:'https://cnet4.cbsistatic.com/img/YgB6-hmYlr7IX6zy9uMpbIvw_ro=/2019/09/28/1179e1f2-f333-48ef-bf51-01baa83f8479/2019-09-25-13-03-54.jpg',text:'There are so many promises about how faster 5G data will transform our lives, it sometimes feels mythical. Though lightning-fast download speeds are slowly coming to more carriers and phones, the prospects of self-driving cars talking to each other, remote surgery and 5G replacing your home Wi-Fi feel like the stuff of a still-distant future. But at last, we are finally starting to see a light at the end of the tunnel.Qualcomm, which makes the 5G chips and modems that every 5G phone in the US will rely on, shared a road map (scroll down to see the slides) that spells out when we might start seeing 5G improvements beyond just fast download speeds. Qualcomm isnt the only major 5G player, of course -- Huawei, Nokia and Ericsson are all leaders, too -- but Qualcomms investments in 5G research and development mean that it has a strong hand in getting the next wave of 5G benefits off the ground. So, its timeline is a good place to start.')

# tag1 = Tag.create(name:'Tech',category_id:cat1.id,blog_id:blog1.id,news_id:new1.id)
# tag2 = Tag.create(name:'Tech',category_id:cat1.id,blog_id:blog2.id,news_id:new1.id)

fl1 = Follow.create(follower_id: user1.id ,followee_id: user2.id)
fl2 = Follow.create(follower_id: user1.id ,followee_id: user3.id)
fl3 = Follow.create(follower_id: user1.id ,followee_id: user4.id)
fl4 = Follow.create(follower_id: user1.id ,followee_id: user5.id)
fl5 = Follow.create(follower_id: user2.id ,followee_id: user1.id)
fl6 = Follow.create(follower_id: user2.id ,followee_id: user3.id)
fl7 = Follow.create(follower_id: user2.id ,followee_id: user4.id)
fl8 = Follow.create(follower_id: user2.id ,followee_id: user5.id)
fl9 = Follow.create(follower_id: user3.id ,followee_id: user1.id)
fl10 = Follow.create(follower_id: user3.id ,followee_id: user2.id)
fl11 = Follow.create(follower_id: user3.id ,followee_id: user4.id)

# cm1 = Comment.create(user_id:user1.id,blog_id:blog1.id,comment:'Great Blog!')
# cm2 = Comment.create(user_id:user2.id,blog_id:blog1.id,comment:'Great Blog!')
# cm3 = Comment.create(user_id:user2.id,blog_id:blog1.id,comment:'Super Blog!')
# cm4 = Comment.create(user_id:user3.id,blog_id:blog2.id,comment:'Great Blog!')
# cm5 = Comment.create(user_id:user1.id,blog_id:blog3.id,comment:'Super Blog!')
# cm5 = Comment.create(user_id:user1.id,blog_id:blog2.id,comment:'Great Blog!')

# cm7 = Comment.create(user_id:user1.id,news_id:new1.id,comment:'Great Blog!')
# cm8 = Comment.create(user_id:user2.id,news_id:new1.id,comment:'Great Blog!')
# cm9 = Comment.create(user_id:user2.id,news_id:new2.id,comment:'Super Blog!')
# cm10 = Comment.create(user_id:user3.id,news_id:new1.id,comment:'Great Blog!')
# cm11 = Comment.create(user_id:user1.id,news_id:new4.id,comment:'Super Blog!')
# cm12 = Comment.create(user_id:user1.id,news_id:new3.id,comment:'Great Blog!')